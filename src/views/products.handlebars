<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Productos</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
</head>

<body>
    <!-- Barra superior -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <h1 class="navbar-brand fs-3 p-0">Productos</h1>
            <ul class="navbar-nav ml-auto">
                <li class="nav-item d-flex align-items-center">
                    <a class="nav-link d-flex p-0 fs-5 align-items-center" href="/api/sessions/"><i
                            class="bi bi-person-circle ms-3"></i>
                    </a>
                    {{#unless (eq rol "admin")}}
                    <a class="nav-link d-flex fs-5" href="/api/community">
                        <i class="bi bi-people-fill ms-3"></i>
                    </a>
                    <a class="nav-link d-flex fs-5" href="/api/carts/{{cart}}">
                        <i class="bi bi-cart-fill ms-3"></i>
                    </a>
                    {{/unless}}
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-5">
        <!-- Menú desplegable de categorías y botón de búsqueda -->
        <div class="mb-3 d-flex align-items-center">
            <label for="categorySelect" class="form-label">Selecciona una categoría:</label>
            <select class="form-select me-2" id="categorySelect" name="category">
                {{#each categories}}
                <option value="{{this}}">{{this}}</option>
                {{/each}}
            </select>
            <button id="searchButton" class="btn btn-light">Buscar</button>
        </div>

        <!-- Botón para agregar un producto -->
        <div class="d-flex justify-content-end mt-3">
            <button class="btn text-success fw-bold border border-success" onclick="addProduct()">Agregar Producto <i
                    class="bi bi-plus-lg"></i></button>
        </div>

        <!-- Lista de productos -->
        <table class="table">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Categoría</th>
                    <th>Stock</th>
                    <th id="priceHeader" style="cursor: pointer;">Precio</th>
                    <th>Imagen</th>
                    <th>Opciones</th>
                </tr>
            </thead>
            <tbody>

                {{#each payload}}
                <tr>
                    <td>
                        <a href="/api/products/{{this._doc._id}}" class="text-decoration-none text-dark"
                            style="font-weight: bold; font-size: 1rem; font-family: 'Arial', sans-serif;">
                            {{this._doc.name}}
                        </a>
                    </td>
                    <td>{{this._doc.category}}</td>
                    <td>{{this._doc.stock}}</td>
                    <td>
                        <span style="font-weight: bold; font-size: 1rem; color: #008000;">
                            ${{this._doc.price}}
                        </span>
                    </td>
                    <td>
                        <a href="/api/products/{{this._doc._id}}">
                            <img src="{{this._doc.image_url}}" alt="{{this._doc.name}}" width="100">
                        </a>
                    </td>
                    <td>
                        {{#if this._doc.owner}}
                        <button class="btn" onclick="addToCart(this)" id="{{this._doc._id}}" cart="{{../cart}}">
                            <i class="bi bi-cart-fill"></i>
                        </button>
                        <button class="btn text-warning" onclick="editProduct(this)" data-productid="{{this._doc._id}}">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                        <button class="btn text-danger" onclick="deleteProduct(this)"
                            data-productid="{{this._doc._id}}">
                            <i class="bi bi-trash3"></i>
                        </button>

                        {{else}}
                        <button class="btn" onclick="addToCart(this)" id="{{this._doc._id}}" cart="{{../cart}}">
                            <i class="bi bi-cart-fill"></i>
                        </button>

                        {{/if}}
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <!-- Paginación -->
        <nav aria-label="Página">
            <ul class="pagination justify-content-center">
                {{#if hasPrevPage}}
                <li class="page-item">
                    <a class="page-link" href="?page={{prevPage}}">Anterior</a>
                </li>
                {{else}}
                <li class="page-item disabled">
                    <span class="page-link">Anterior</span>
                </li>
                {{/if}}
                {{#each pageNumbers}}
                <li class="page-item {{#if current}}active{{/if}}">
                    <a class="page-link" href="?page={{number}}">{{number}}</a>
                </li>
                {{/each}}
                {{#if hasNextPage}}
                <li class="page-item">
                    <a class="page-link" href="?page={{nextPage}}">Siguiente</a>
                </li>
                {{else}}
                <li class="page-item disabled">
                    <span class="page-link">Siguiente</span>
                </li>
                {{/if}}
            </ul>
        </nav>
    </div>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        // EDIT PRODUCT
        function editProduct(button) {
            const productId = button.getAttribute("data-productid");
            window.location.href = `/api/products/manager/${productId}`;
        }

        // ADD PRODUCT
        function addProduct() {
            window.location.href = "/api/products/manager/new-product";
        }

        // DELETE PRODUCT
        function deleteProduct(button) {
            const productId = button.getAttribute("data-productid");
            fetch(`/api/products/manager/${productId}`, {
                method: 'DELETE',
            })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        Toastify({
                            text: "Error al eliminar el producto",
                            duration: 3000,
                            close: true,
                            gravity: "bottom",
                            position: "right",
                        }).showToast();
                    }
                })
                .catch(error => {
                    // Mostrar un mensaje de error si ocurre un error de red u otro error durante la eliminación
                    Toastify({
                        text: "Error de red al eliminar el producto",
                        duration: 3000,
                        close: true,
                        gravity: "bottom",
                        position: "right",
                    }).showToast();
                    console.error('Error:', error);
                });
        }

        document.addEventListener("DOMContentLoaded", function () {

            // Obtener elementos necesarios
            const categorySelect = document.getElementById("categorySelect");
            const searchButton = document.getElementById("searchButton");
            const priceHeader = document.getElementById("priceHeader");

            priceHeader.addEventListener("click", function () {
                // Obtener el valor actual del query param "sort"
                const currentUrl = new URL(window.location.href);
                const queryParams = new URLSearchParams(currentUrl.search);
                const currentSort = queryParams.get("sort");

                // Calcular el nuevo valor de "sort" (alternar entre 1 y -1)
                const newSort = currentSort === "1" ? "-1" : "1";

                // Actualizar el query param "sort" en la URL
                queryParams.set("sort", newSort);
                currentUrl.search = queryParams.toString();

                // Redireccionar a la URL actualizada
                window.location.href = currentUrl.toString();
            });

            // Agregar un evento de clic al botón "Buscar"
            searchButton.addEventListener("click", function () {
                // Obtener el valor de la categoría seleccionada
                const selectedCategory = categorySelect.value;

                if (selectedCategory === 'Todas') {
                    const currentUrl = new URL(window.location.href);

                    currentUrl.searchParams.delete('query');
                    window.location.href = currentUrl.toString();
                } else {
                    window.location.href = `?query=${selectedCategory}`
                }
            });
        });

        //funcion para añadir al carrito
        function addToCart(element) {

            const productId = element.id;

            const id = element.getAttribute('cart');

            fetch(`/api/carts/${id}`, {
                method: 'PUT',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ productId }),
            })
                .then(response => {
                    if (response.ok) {
                        Toastify({

                            text: "Producto agregado al carro",
                            gravity: "bottom",
                            position: "right",
                            style: {
                                background: "linear-gradient(to right, #66ff66, #33cc33)",
                            },
                            duration: 3000

                        }).showToast();
                        console.log('Producto agregado al carrito con éxito');
                    } else {
                        // Maneja la respuesta si hay un error
                        Toastify({

                            text: "Error :(",
                            gravity: "bottom",
                            position: "right",
                            style: {
                                background: "linear-gradient(to right, #FF0000, #FF5733)",
                            },
                            duration: 3000

                        }).showToast();
                        console.error('Error al agregar el producto al carrito');
                    }
                })
                .catch(error => {

                    console.error('Error de red:', error);
                });
        }
    </script>
</body>

</html>